name: Run automated tests on push

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      mysql:
        image: mariadb
        env:
          MYSQL_ROOT_PASSWORD: root

        ports:
          - 3306:3306

    steps:
      - name: Verify Postgres connection
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          psql --host 127.0.0.1 --port 5432 --user=postgres -d postgres --command="SELECT VERSION()"
        env:
            PGPASSWORD: postgres
      - name: Verify MySql connection
        run: |
          sudo apt-get install mysql-client
          mysql --host=127.0.0.1 --user=root --password=root --execute="SHOW TABLES" information_schema
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Setup database
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          character set server: 'utf8mb4'
          collation server: 'utf8mb4_general_ci'
          mysql version: 'latest'
          mysql database: 'junit-test' 
          mysql root password: 'junit-test'
          mysql user: 'junit-test'
          mysql password: 'junit-test'

      - name: Build
        run: mvn --batch-mode -DskipTests package

      - name: Test
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true
      
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
